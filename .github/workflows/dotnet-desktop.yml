name: CI - Actions GITHUB

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths: 
      - '**.csproj'
      - docker-compose.yml
  pull_request:
    branches: [ "main" ]
    paths: 
      - '**.csproj'
      - docker-compose.yml

      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0' # The .NET SDK version to use  
  DOTNET_INSTALL_DIR: "%LocalAppData%/Microsoft/dotnet"  
  
jobs: 
  build:
    name: Build Aplicação    
    runs-on: self-hosted
    steps:     
      - uses: actions/checkout@v4

      # - name: Build API CREATION
      #   run: dotnet publish ./FIAP.TECH.API.CREATION --configuration Release

      # - name: Build API UPDATE
      #   run: dotnet publish ./FIAP.TECH.API.UPDATE --configuration Release

      # - name: Build CONSULT
      #   run: dotnet publish ./FIAP.TECH.API.CONSULT --configuration Release

      # - name: Build API DELETION
      #   run: dotnet publish ./FIAP.TECH.API.DELETION --configuration Release

      - name: Build AUTH
        run: dotnet publish ./FIAP.TECH.AUTH --configuration Release

      # - name: Build WORK Service
      #   run: dotnet publish ./FIAP.TECH.WORK --configuration Release

      - name: Doker Login
        uses: docker/login-action@v3.3.0
        with:
          # Username used to log against the Docker registry
          username: 'somdesp'
          # Password or personal access token used to log against the Docker registry
          password: ${{secrets.DOCKERHUB}}   

      - name: Build image
        run: docker compose -f docker-compose.yml build

      # - name: Push image to DO Container Registry
      #   run: docker compose -f docker-compose.yml push     
        
      - name: Build the stack
        run: docker-compose up -d

      # - name: Build and push Docker images (API CREATION)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.API.CREATION
      #     tags: 'somdesp/fiap3:api_creation_lasted'
      #     push: true

      # - name: Build and push Docker images (API UPDATE)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.API.UPDATE
      #     tags: 'somdesp/fiap3:api_update_lasted'
      #     push: true

      # - name: Build and push Docker images (API CONSULT)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.API.CONSULT
      #     tags: 'somdesp/fiap3:api_consult_lasted'
      #     push: true

      # - name: Build and push Docker images (API DELETION)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.API.DELETION
      #     tags: 'somdesp/fiap3:api_deletion_lasted'
      #     push: true
      
      # - name: Build and push Docker images (WORK SERVICE)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.WORK
      #     tags: 'somdesp/fiap3:work_service_lasted'
      #     push: true
          
      # - name: Build and push Docker images (AUTH)
      #   uses: docker/build-push-action@v6.9.0
      #   with:
      #     context: ./FIAP.TECH.AUTH/
      #     tags: 'somdesp/fiap3:auth_lasted'
      #     push: true

#  test:
#    name: Testes Aplicação
#    runs-on: self-hosted
#    steps:
#    - uses: actions/checkout@v4
#    - name: Setup .NET Core
#      uses: actions/setup-dotnet@v3
#      with:
#        dotnet-version: ${{ env.DOTNET_VERSION }}

#    - name: Install dependencies
#      run: dotnet restore ./src/FIAP.TECH.TESTS
      
#    - name: Build
#      run: dotnet build ./src/FIAP.TECH.TESTS --configuration Release --no-restore
    
#    - name: Test
#      run: dotnet test ./src/FIAP.TECH.TESTS --no-restore --verbosity normal
